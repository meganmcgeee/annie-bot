{"version":3,"sources":["index.js"],"names":["AIRTABLE_API_KEY","use","dialog","session","send","beginDialog","results","endConversation","Prompts","choice","response","index","endDialog","replaceDialog","reloadAction","matches","get","then","record","fields","Borough","message","sendMessages","Brooklyn","directionMessage","msg","Name","name","Directions","directions","Address","address","borough","Phone","phone","Services","services","detailsMessage","Hours","hours","input","msgs","forEach"],"mappings":"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","file":"index.js","sourcesContent":["/*-----------------------------------------------------------------------------\nHelpHer bot connects humans in need to resources\n-----------------------------------------------------------------------------*/\n\nimport axios from 'axios';\nimport bot from './bot';\nimport builder from 'botbuilder';\nimport filter from 'lodash/fp/filter';\nimport forEach from 'lodash/fp/forEach';\nimport get from 'lodash/fp/get';\nimport map from 'lodash/fp/map';\nimport showSessionStackTrace from './showSessionStackTrace';\n\nconst AIRTABLE_API_KEY = `keyNJRjM1plBmeRh4`;\n\n\nbot.use(showSessionStackTrace);\n\nbot.dialog(`/`, [\n  session => {\n    session.send(`Hey, I'm Annie bot. If you need some help, I've got it. I can give you info about places to stay, free healthcare, food, and safe houses. I can also connect you to someone who can help.`);\n    session.beginDialog(`/menu`);\n  },\n  (session, results) => {\n    session.endConversation(`Goodbye until next time...`);\n  },\n]);\n\nbot.dialog(`/menu`, [\n  session => {\n    builder.Prompts.choice(session, `What city are you in, love?`, `New York City |Los Angeles|Chicago`);\n  },\n  (session, results) => {\n    switch (results.response.index) {\n      case 0:\n        session.beginDialog(`/newYork`);\n        break;\n      case 1:\n        session.beginDialog(`/losAngeles`);\n        break;\n      case 2:\n        session.beginDialog(`/chicago`);\n        break;\n      default:\n        session.endDialog();\n        break;\n    }\n  },\n  session => {\n        // Reload menu\n    session.replaceDialog(`/menu`);\n  },\n]).reloadAction(`showMenu`, null, { matches: /^(menu|back)/i });\n// NYC Services Menu\n\nbot.dialog(`/newYork`, [\n  session => {\n    builder.Prompts.choice(session, `Love NYC. What borough are you currently in?`, `Brooklyn |Bronx |Manhattan |Queens |Staten Island`);\n  },\n  (session, results) => {\n    switch (results.response.index) {\n      case 0:\n        session.beginDialog(`/newYork/bk`);\n        break;\n      case 1:\n        session.beginDialog(`/newYork/bx`);\n        break;\n      case 2:\n        session.beginDialog(`/newYork/man`);\n        break;\n      case 3:\n        session.beginDialog(`/newYork/qns`);\n        break;\n      case 4:\n        session.beginDialog(`/newYork/si`);\n        break;\n      default:\n        session.endDialog();\n        break;\n    }\n  },\n  session => {\n      // Reload menu\n    session.replaceDialog(`/menu`);\n  },\n]).reloadAction(`showMenu`, null, { matches: /^(menu|back)/i });\n\n// NYC Boroughs\n\n// Brooklyn\nbot.dialog(`/newYork/bk`, [\n  session => {\n    builder.Prompts.choice(session, `Cool, BK. And how can I help you? Right now, I can help with the following:`, `Healthcare|Shelter|Counseling/Safe Spaces|Childcare`);\n  },\n  (session, results) => {\n    switch (results.response.index) {\n      case 0:\n        session.beginDialog(`/newYork/bk/healthcare`);\n        break;\n      case 1:\n        session.beginDialog(`/newYork/bk/shelter`);\n        break;\n      case 2:\n        session.beginDialog(`/newYork/bk/counseling`);\n        break;\n      case 3:\n        session.beginDialog(`/newYork/bk/childcare`);\n        break;\n      default:\n        session.endDialog();\n        break;\n    }\n  },\n  session => {\n      // Reload menu\n    session.replaceDialog(`/menu`);\n  },\n]).reloadAction(`showMenu`, null, { matches: /^(menu|back)/i });\n\n// Brooklyn Healthcare\nbot.dialog(`/newYork/bk/healthcare`, [\n  session => {\n    axios.get(`https://api.airtable.com/v0/app9xzJDMtX5XYjWJ/Health?api_key=keyNJRjM1plBmeRh4`)\n      .then(get(`data.records`))\n      .then(filter(record => record.fields.Borough === `Brooklyn`))\n      .then(map(message))\n      .then(sendMessages(session));\n  },\n]);\n\n// Brooklyn Shelter\nbot.dialog(`/newYork/bk/shelter`, [\n  session => {\n    axios.get(`https://api.airtable.com/v0/app9xzJDMtX5XYjWJ/Shelter?api_key=keyNJRjM1plBmeRh4`)\n      .then(get(`data.records`))\n      .then(filter(record => record.fields.Borough === `Brooklyn`))\n      .then(map(message))\n      .then(sendMessages(session));\n  },\n]);\n\n// Brooklyn Counseling\nbot.dialog(`/newYork/bk/couseling`, [\n  session => {\n    axios.get(`https://api.airtable.com/v0/app9xzJDMtX5XYjWJ/Counseling?api_key=keyNJRjM1plBmeRh4`)\n      .then(get(`data.records`))\n      .then(filter(record => record.fields.Brooklyn === `Y`))\n      .then(map(directionMessage))\n      .then(forEach(msg => session.send(msg)));\n  },\n]);\n\n// Brooklyn Childcare\nbot.dialog(`/newYork/bk/childcare`, [\n  session => {\n    builder.Prompts.choice(session, `Childcare, I know all about where to get that kind of help. What type of care do you need help with?`, `After School|Daycare|Family Help| Supplies`);\n  },\n  (session, results) => {\n    switch (results.response.index) {\n      case 0:\n        session.beginDialog(`/newYork/bk/childcare/afterschool`);\n        break;\n      case 1:\n        session.beginDialog(`/newYork/bk/childcare/daycare`);\n        break;\n      case 2:\n        session.beginDialog(`/newYork/bk/childcare/family`);\n        break;\n      case 3:\n        session.beginDialog(`/newYork/bk/childcare/supplies`);\n        break;\n      default:\n        session.endDialog();\n        break;\n    }\n  },\n  session => {\n      // Reload menu\n    session.replaceDialog(`/menu`);\n  },\n]).reloadAction(`showMenu`, null, { matches: /^(menu|back)/i });\n\nbot.dialog(`/newYork/bk/childcare/afterschool`, [\n  session => {\n    axios.get(`https://api.airtable.com/v0/app9xzJDMtX5XYjWJ/Childcare?api_key=keyNJRjM1plBmeRh4`)\n      .then(get(`data.records`))\n      .then(filter(record => record.fields.Borough === `Brooklyn`))\n      .then(map(directionMessage))\n      .then(forEach(msg => session.send(msg)));\n  },\n]);\n\n// Bronx\nbot.dialog(`/newYork/bx`, [\n  session => {\n    builder.Prompts.choice(session, `Cool, the Bronx. And how can I help you? Right now, I can help with the following:`, `Healthcare|Shelter|Counseling|Childcare`);\n  },\n  (session, results) => {\n    switch (results.response.index) {\n      case 0:\n        session.beginDialog(`/newYork/bx/healthcare`);\n        break;\n      case 1:\n        session.beginDialog(`/newYork/bx/shelter`);\n        break;\n      case 2:\n        session.beginDialog(`/newYork/bx/counseling`);\n        break;\n      case 3:\n        session.beginDialog(`/newYork/bx/childcare`);\n        break;\n      default:\n        session.endDialog();\n        break;\n    }\n  },\n  session => {\n      // Reload menu\n    session.replaceDialog(`/menu`);\n  },\n]).reloadAction(`showMenu`, null, { matches: /^(menu|back)/i });\n\n// Bronx Healthcare\nbot.dialog(`/newYork/bx/healthcare`, [\n  session => {\n    builder.Prompts.choice(session, `What kind of care do you need?`, `I'm sick. | I'm due for a check-up. | I have an illness (diabetes, HIV). | I need sexual health services.`);\n  },\n  (session, results) => {\n    switch (results.response.index) {\n      case 0:\n        session.beginDialog(`/newYork/bx/healthcare/sickvisit`);\n        break;\n      case 1:\n        session.beginDialog(`/newYork/bx/healthcare/checkup`);\n        break;\n      case 2:\n        session.beginDialog(`/newYork/bx/healthcare/illness`);\n        break;\n      case 3:\n        session.beginDialog(`/newYork/bx/healthcare/sexual`);\n        break;\n      default:\n        session.endDialog();\n        break;\n    }\n  },\n  session => {\n      // Reload menu\n    session.replaceDialog(`/menu`);\n  },\n]).reloadAction(`showMenu`, null, { matches: /^(menu|back)/i });\n\n\n// Los Angeles\nbot.dialog(`/losAngeles`, [\n  session => {\n    session.send(`Hey, I love LA. I just don't have any info about it yet. Check back soon and I'll let you know.`);\n  },\n]);\n\n\n// Chicago\nbot.dialog(`/chicago`, [\n  session => {\n    session.send(`Hey, I love CHI. I just don't have any info about it yet. Check back soon and I'll let you know.`);\n  },\n]);\n\nfunction directionMessage({ fields: { Name: name, Directions: directions, Address: address, Borough: borough, Phone: phone, Services: services } }) {\n  return `You can get to ${name} at ${address} by taking the ${directions} They can assist with ${services}. If you need more info, you can call ${phone}.`;\n}\nfunction detailsMessage({ fields: { Phone: phone, Services: services, Hours: hours } }) {\n  return `They are open ${hours} and can assist with ${services}. For more info, they can be reached at ${phone}.`;\n}\n\nfunction message(input) {\n  return [directionMessage(input), detailsMessage(input)];\n}\n\nfunction sendMessages(session) {\n  return msgs =>\n    msgs.forEach(forEach(msg => session.send(msg)));\n}\n"]}